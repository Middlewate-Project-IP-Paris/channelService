# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import channel_pb2 as proto_dot_channel__pb2


class channelServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getPostStat = channel.unary_unary(
                '/channel.channelService/getPostStat',
                request_serializer=proto_dot_channel__pb2.PostStatRequest.SerializeToString,
                response_deserializer=proto_dot_channel__pb2.PostStatResponse.FromString,
                )
        self.getChannelInfo = channel.unary_unary(
                '/channel.channelService/getChannelInfo',
                request_serializer=proto_dot_channel__pb2.ChannelInfoRequest.SerializeToString,
                response_deserializer=proto_dot_channel__pb2.ChannelInfoResponse.FromString,
                )
        self.getChannels = channel.unary_stream(
                '/channel.channelService/getChannels',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_channel__pb2.GetChannelsResponse.FromString,
                )
        self.getChannelSubsHistory = channel.unary_unary(
                '/channel.channelService/getChannelSubsHistory',
                request_serializer=proto_dot_channel__pb2.ChannelSubsHistoryRequest.SerializeToString,
                response_deserializer=proto_dot_channel__pb2.ChannelSubsHistoryResponse.FromString,
                )
        self.getPostStatHistory = channel.unary_unary(
                '/channel.channelService/getPostStatHistory',
                request_serializer=proto_dot_channel__pb2.PostStatHistoryRequest.SerializeToString,
                response_deserializer=proto_dot_channel__pb2.PostStatHistoryResponse.FromString,
                )
        self.getPosts = channel.unary_unary(
                '/channel.channelService/getPosts',
                request_serializer=proto_dot_channel__pb2.GetPostsRequest.SerializeToString,
                response_deserializer=proto_dot_channel__pb2.GetPostsResponse.FromString,
                )
        self.getPostInfo = channel.unary_unary(
                '/channel.channelService/getPostInfo',
                request_serializer=proto_dot_channel__pb2.GetPostsInfoRequest.SerializeToString,
                response_deserializer=proto_dot_channel__pb2.GetPostInfoResponse.FromString,
                )


class channelServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getPostStat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getChannelInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getChannelSubsHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPostStatHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPosts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPostInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_channelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getPostStat': grpc.unary_unary_rpc_method_handler(
                    servicer.getPostStat,
                    request_deserializer=proto_dot_channel__pb2.PostStatRequest.FromString,
                    response_serializer=proto_dot_channel__pb2.PostStatResponse.SerializeToString,
            ),
            'getChannelInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getChannelInfo,
                    request_deserializer=proto_dot_channel__pb2.ChannelInfoRequest.FromString,
                    response_serializer=proto_dot_channel__pb2.ChannelInfoResponse.SerializeToString,
            ),
            'getChannels': grpc.unary_stream_rpc_method_handler(
                    servicer.getChannels,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_channel__pb2.GetChannelsResponse.SerializeToString,
            ),
            'getChannelSubsHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.getChannelSubsHistory,
                    request_deserializer=proto_dot_channel__pb2.ChannelSubsHistoryRequest.FromString,
                    response_serializer=proto_dot_channel__pb2.ChannelSubsHistoryResponse.SerializeToString,
            ),
            'getPostStatHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.getPostStatHistory,
                    request_deserializer=proto_dot_channel__pb2.PostStatHistoryRequest.FromString,
                    response_serializer=proto_dot_channel__pb2.PostStatHistoryResponse.SerializeToString,
            ),
            'getPosts': grpc.unary_unary_rpc_method_handler(
                    servicer.getPosts,
                    request_deserializer=proto_dot_channel__pb2.GetPostsRequest.FromString,
                    response_serializer=proto_dot_channel__pb2.GetPostsResponse.SerializeToString,
            ),
            'getPostInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getPostInfo,
                    request_deserializer=proto_dot_channel__pb2.GetPostsInfoRequest.FromString,
                    response_serializer=proto_dot_channel__pb2.GetPostInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'channel.channelService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class channelService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getPostStat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.channelService/getPostStat',
            proto_dot_channel__pb2.PostStatRequest.SerializeToString,
            proto_dot_channel__pb2.PostStatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getChannelInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.channelService/getChannelInfo',
            proto_dot_channel__pb2.ChannelInfoRequest.SerializeToString,
            proto_dot_channel__pb2.ChannelInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/channel.channelService/getChannels',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_channel__pb2.GetChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getChannelSubsHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.channelService/getChannelSubsHistory',
            proto_dot_channel__pb2.ChannelSubsHistoryRequest.SerializeToString,
            proto_dot_channel__pb2.ChannelSubsHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPostStatHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.channelService/getPostStatHistory',
            proto_dot_channel__pb2.PostStatHistoryRequest.SerializeToString,
            proto_dot_channel__pb2.PostStatHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.channelService/getPosts',
            proto_dot_channel__pb2.GetPostsRequest.SerializeToString,
            proto_dot_channel__pb2.GetPostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPostInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/channel.channelService/getPostInfo',
            proto_dot_channel__pb2.GetPostsInfoRequest.SerializeToString,
            proto_dot_channel__pb2.GetPostInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
